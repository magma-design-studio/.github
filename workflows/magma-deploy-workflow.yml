name: Deploy Workflow

on:
  workflow_call:
    inputs:
      type:
        required: true
        type: string

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Check input type
        if: ${{ inputs.type != 'stage' && inputs.type != 'prod' }}
        run: | 
          echo "no type input on magma-deploy-workflow.yml"
          exit 1

      - name: Set up env variables
        if: ${{ inputs.type == 'prod' }}
        run: |
          echo "TYPE_UPPER=$(echo ${{ inputs.type }} | awk '{print toupper($0)}')" >> $GITHUB_ENV
          echo "DEPLOY_HOST=${{ secrets[env.TYPE_UPPER+'_HOST'] }}" >> $GITHUB_ENV
          echo "DEPLOY_USER=${{ secrets[env.TYPE_UPPER+'_USER'] }}" >> $GITHUB_ENV
          echo "DEPLOY_PASSWORD=${{ secrets[env.TYPE_UPPER+'_PASSWORD'] }}" >> $GITHUB_ENV
          echo "DEPLOY_PROTOCOL=${{ secrets[env.TYPE_UPPER+'_SFTP'] && 'sftp' || 'ftp' }}" >> $GITHUB_ENV
          echo "DEPLOY_PORT=${{ secrets[env.TYPE_UPPER+'_SFTP'] && '22' || '21' }}" >> $GITHUB_ENV
          echo "DEPLOY_REMOTE_PATH=${{ secrets[env.TYPE_UPPER+'_REMOTE_PATH'] }}" >> $GITHUB_ENV
          echo "DEPLOY_LOCAL_PATH=${{ secrets[env.TYPE_UPPER+'_LOCAL_PATH'] }}" >> $GITHUB_ENV

      - name: Check missing variables
        run: | 
          echo "TYPE_UPPER=$(echo ${{ inputs.type }} | awk '{print toupper($0)}')" >> $GITHUB_ENV
          MISSING_VARS=()
          [[ -z "${{ secrets[env.TYPE_UPPER+'_HOST'] }}" ]] && MISSING_VARS+=("HOST")
          [[ -z "${{ secrets[env.TYPE_UPPER+'_USER'] }}" ]] && MISSING_VARS+=("USER")
          [[ -z "${{ secrets[env.TYPE_UPPER+'_PASSWORD'] }}" ]] && MISSING_VARS+=("PASSWORD")
          
          if [ ${#MISSING_VARS[@]} -ne 0 ]; then
            echo "Error: Any of ${MISSING_VARS[@]/#/$TYPE_UPPER'_'} is not defined."
            exit 1
          fi
          
      - name: Deploy using FTP/SFTP
        uses: SamKirkland/FTP-Deploy-Action@4.0.0
        with:
          server: ${{ env.DEPLOY_HOST }}
          username: ${{ env.DEPLOY_USER }}
          password: ${{ env.DEPLOY_PASSWORD }}
          protocol: ${{ env.DEPLOY_PROTOCOL }}
          port: ${{ env.DEPLOY_PORT }}
          local-dir: ${{ env.DEPLOY_LOCAL_PATH }}
          server-dir: ${{ env.DEPLOY_REMOTE_PATH }}
          security: strict
          state-name: ${{ inputs.type == 'prod' && 'state-production.json' : 'state-stage.json'  }}
